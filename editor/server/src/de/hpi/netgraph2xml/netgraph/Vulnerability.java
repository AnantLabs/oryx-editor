package de.hpi.netgraph2xml.netgraph;

import org.json.JSONException;
import org.json.JSONObject;
import org.xmappr.Element;

import de.hpi.bpmn2xpdl.XMLConvertible;
import de.hpi.netgraph2xml.XMLConvertibleUtils;

public class Vulnerability extends XMLConvertible{
    @Element
    String cve;
    @Element
    String range;
    public String getCve() {
        return cve;
    }
    public void setCve(String cve) {
        this.cve = cve;
    }
    public String getRange() {
        return range;
    }
    public void setRange(String range) {
        this.range = range;
    }
    public void writeJSONstencil(JSONObject modelElement) throws JSONException {
	JSONObject stencil = new JSONObject();
	stencil.put("id", "vulnerability");

	modelElement.put("stencil", stencil);
    }
    
    public void writeJSONcve(JSONObject modelElement) throws JSONException {
	modelElement = XMLConvertibleUtils.switchToProperties(modelElement);
	modelElement.put("cve", getCve());
    }
    public void readJSONcve(JSONObject modelElement) throws JSONException {
	setCve(modelElement.optString("cve"));
    }
    public void writeJSONrange(JSONObject modelElement) throws JSONException {
	modelElement = XMLConvertibleUtils.switchToProperties(modelElement);
	modelElement.put("range", getRange());
    }
    public void readJSONrange(JSONObject modelElement) throws JSONException {
	setRange(modelElement.optString("range"));
    }
    public void readJSONproperties(JSONObject modelElement) throws JSONException {
	modelElement = modelElement.optJSONObject("properties");
	if(modelElement==null){
	    return;
	}
	parse(modelElement);
    }
    public void writeJSONresourceId(JSONObject modelElement) throws JSONException {
	modelElement.put("resourceId", XMLConvertibleUtils.generateResourceId());
    }
}

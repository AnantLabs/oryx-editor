XPDL-Problems:

- XPDL hat eine sinnfreie Aufteilung der Entities:
	* Gateway, Event, Activity ist eine Entität
	* Subprocesses heißen Activity Sets
	* Transitions
	* Pools, Processes und Subprocesses haben Kinder, Lanes nicht auch keine Referenzen
	* Subprocesses sind auch Processes vielleicht auch in WorkflowProcesses eingliedern (sehr unsicher ob das möglich ist)?!
- Package/activity Documentation ist ein extra tag, sonst in Object
- Condition Type ist anders als der von Oryx(/BPMN?)

Oryx-Problems:

- der letter case von keys ist nicht konsistent (z.B. totalCount in assignments aber processdocumentation)
- Oryx stürzt ab wenn man die Farbe ändert
- Groups haben keine Containment-Rules
- Flows setzen source nicht korrekt
- Pools, Lanes Attribute werden nicht gesetzt
- In Artifacts werden assignments im JSON ohne oberkey assignments serialisiert
- In Artifacts sind laut XPDL keine Assignments vorgesehen (aber in BPMN?)
- In task kann man mi und standards gleichzeitig setzen , darf nicht gehen
- Die ganzen ref attribute sind überflüssig, da man da beliebige werte reinschreiben kann
- in Activities können Inputs/Outputs/Performers/Inmessage/Outmessage/InputSet/OutputSet/IoRules beliebig definiert werden
- conditionref im StartConditionalEvent sollte condition heißen
- StartSignalEvent hat als Trigger Multiple sollte eigentlich Signal sein
- Multiples in Events lassen sich nicht abbilden, da die Triggers beliebig beschrieben können und somit nicht auf die kinder des tags schließen kann
- Activities MÜSSEN bei mehreren outgoings eigentlich ein splittag haben (TransitionRestrictions) mit einer Reihenfolge der Pfade, wie sie ausgewertet werden -> wie von Oryx übersetzen?
- entry im Subprocess/Collapsed Sub
- Transaction lässt sich auch nicht abbilden -> erwartet strukturierte Information in einer Activity
- Input und Output Maps im Subprocess... what for?

Code-Probleme:

- massives refactoring nötig (string konstanten auslagern, obertypen einführen z.b. für intermediateevent, startevent...)

Regex:

[\s]*<evils>\n[\s]*\w[^\n]*\n[\s]*</evils>
#summary This guide shows how to set up and configure a development environment in order to build the Oryx application from source.

= In a Nutshell =

== Installation on Ubuntu 8.10 ==

=== Tomcat ===
  * install `tomcat6-user`
  * create `tomcat4oryx` tomcat: `tomcat6-instance-create tomcat4oryx`
  * modify `bin/startup.sh`
    * add `export JPDA_ADDRESS=8001`
  * change `deploymentdir` in `build.properties` to the full path to `tomcat4oryx`
  * (quick-hack until a better solution is provided by Ubuntu) modify the last line of `/usr/share/tomcat6/bin/startup.sh` to show `exec "$PRGDIR"/"$EXECUTABLE" jpda start`
  
=== Eclipse ===
  * Manual installation
  * Aptana-plugin
  * Subversion-plugin

== Development remarks ==

=== Starting and stopping tomcat ===
  * `tomcat4oryx/bin/startup.sh`
  * `tomcat4oryx/bin/shutdown.sh`

==Installation on Windows==

_Unfortunately, we experienced severe problems running PostgreSQL with PL/Python on Windows7. _

===Browser===
  * Get and Install Firefox http://www.mozilla-europe.org/de/firefox/
  * Useful for debugging --> Firebug https://addons.mozilla.org/de/firefox/addon/1843

===Java===
  * Get JDK 5 or higher http://java.sun.com/javase/downloads/index.jsp
  * Set JAVA_HOME Enviroment variable to java installation dir

===Eclipse===
  * Get and install Eclipse IDE for Java EE Developers http://www.eclipse.org/downloads/ 
  * Get subclipse http://subclipse.tigris.org/ or use any other Suversion client

===Check out trunk===
  * Import Eclipse project from svn
  * SVN link see http://code.google.com/p/oryx-editor/source/checkout

===Get Python===
  * get and install python
  * ATTENTION use only version 2.5
  * http://www.python.org/download/releases/2.5.2 

===Database===
  * get and install postgresql vesion 8.3.x (use pgInstaller)
  * http://www.postgresql.org/download 
  * Execute installer as admin
  * http://www.pg-forum.de/h-ufig-gestellte-fragen-faq/2082-installation-von-postgresql-unter-windows-vista.html
  * ATTENTION Procedural language dialoge has to show PL/python (otherwise python installation failed). Install PL/python!

===Load Database Schema===
*Manually*
  * add postgresql bin directory to PATH enviroment variable
  * Run comandline as user postgres (runas /user:postgres cmd)
  * change to schema file directory
  * Schema-File: /poem-jvm/data/database/db_schema.sql
  * Run the following commands:
  * createuser –U postgres –-echo –-pwprompt –-encrypted poem
  * createdb –U postgres –-echo –-encoding utf8 –-owner poem poem
  * psql –U postgres –-dbname poem –-file db_schema.sql
*ANT*
  * It is also possibile to use the build-target create-db
  * Therefore fill in your postgres installation credentials to the build.properties and run the create-db target 

=== Apache Tomcat ===
  * Get and install apache tomcat
  * http://tomcat.apache.org/download-60.cgi
  * Add Tomcat to Eclipse server view
  * Guide on http://www.eclipse.org/webtools/community/tutorials/BuildJ2EEWebApp/BuildJ2EEWebApp.html

=== Build Properties ===
  * open build-properties
  * edit deploymentdir and set it to your apache wepapps folder
  * If you created a password for the poem user, edit password in „/poem-jvm/etc/hibernate.cfg.xml“

===Build===
Setup to produce deployable war-files:
  * Create a new external tools configuration in eclipse
  * buildfile: build.xml
  * base directory: oryx directory
  * select targets: build-all and deploy-all


Development Setup

The build process of this setup is much faster because we avoid building war files. Instead, we point tomcat to our build directory containing the Oryx web-application. To do this you have to build the Oryx backend and frontend separately. 

Build backend: 
Select target "dist" in `poem-jvm/build.xml`
The backend web-application can afterwards be found in `dist/backend`.

Build frontend: 
Select targets "build, examples, compress, dist" in `editor/build.xml
The frontend web-application can afterwards be found in `dist/client`. 

To run the whole Oryx web-application we have to point tomcat to the two web-application-folders we just created. This is done by an entry in the file 'server.xml'. This file is located in the `conf`folder of every tomcat installation. Insert the following tags as child tags of the `<Host>`tag: 

{{{
<Context path="/oryx"
            docBase="/Oryx/trunk/dist/client" debug="0" reloadable="true"/>
 
<Context path="/backend"
             docBase="/Oryx/trunk/dist/backend" debug="0" reloadable="true"/>
}}}

Please adjust the paths in the docBase attribute according to your OS and directory structure. These are just examples.

===Test===
  * Start the server and navigate with firefox to loacalhost:8080/backend/poem/repository
  * Now everything done. Congratulation!

Other Guides:
  * http://ddweerasiri.blogspot.com/2009/04/how-to-build-oryx-editor-in-ubuntu.html
  * http://code.google.com/p/oryx-editor/wiki/DeployOryxOnWindowsOrDebian


  
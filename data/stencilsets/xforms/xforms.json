{
	"title":"XForms",
	"namespace":"http://b3mn.org/stencilset/xforms#",
	"description":"This is the XForms stencil set specification.",
 	"stencils" : [
 		{
			"type":				"node",
			"id":				"XForm",
			"title":			"XForm",
			"groups":			["Form"],
			"description":		"A XForms Form.",
			"view":				"node.form.svg",
			"icon":				"new_form.png",
			"mayBeRoot":		true,
			"hide":				true,
			"roles":			["form"],
			"layout":function(shape) {
				 var raiseEvent = shape._delegateEvent.bind(shape);
				 raiseEvent({type:'layout.rows',shape:shape,marginTop:50,marginLeft:50,spacingX:30,spacingY:30});
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"This is a unique Id that distinguishes the Form from other Forms.",
					"readonly":false,
					"optional":false,
					"length":"50"
				},
				{
					"id":"name",
					"type":"String",
					"title":"name",
					"value":"",
					"description":"Name is an attribute that is text description of the Form.",
					"readonly":false,
					"optional":false,
					"length":"50",
					"refToView":"formcaption",
					"wrapLines":true
				},
				{
					"id":"version",
					"type":"String",
					"title":"version",
					"value":"",
					"description":"This defines the Version number of the Form Model.",
					"readonly":false,
					"optional":true,
					"length":"50"
				}
			]
		},	
 		{
			"type": "node",
			"id":"Input",
			"title":"Input",
			"groups":["Controls"],
			"description":"An Input Control.",
			"view":"node.input.svg",
			"icon":"new_input.png",
			"roles": [
				"core_form_controls"
			],
			"layout":function(shape) {	
				var labels = shape.getChildNodes(false).findAll(function(node) {
					return (node.getStencil().id() === "http://b3mn.org/stencilset/xforms#Label");
				});
				
				if(labels.length > 0) {
					labels.each(function(label) {
						var ul = label.bounds.upperLeft();
						var lr = label.bounds.lowerRight();
						ul.y = - label.bounds.height() - 1;
						lr.y = - 1;
						ul.x = 0;
						lr.x = label.bounds.width();;
						label.bounds.set(ul, lr);
					});
				}
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"inputmode",
					"type":"String",
					"title":"inputmode",
					"value":"",
					"description":"Hint to the user agent to select an appropriate input mode for the text input",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"navindex",
					"type":"Integer",
					"title":"navindex",
					"value":0,
					"description":"Integer used to define the navigation sequence",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"accesskey",
					"type":"String",
					"title":"accesskey",
					"value":"",
					"description":"Shortcut for moving the input focus to this control",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"1"
				},
				{
					"id":"type",
					"type":"String",
					"title":"type",
					"value":"",
					"description":"Any xsd:QName representing the expected datatype",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"readonly",
					"type":"String",
					"title":"readonly",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"required",
					"type":"String",
					"title":"required",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"calculate",
					"type":"String",
					"title":"calculate",
					"value":"",
					"description":"An expression used to calculate a string value for the associated instance data node",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"constraint",
					"type":"String",
					"title":"constraint",
					"value":"",
					"description":"A predicate that needs to be satisfied for the associated instance data node to be considered valid",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"p3ptype",
					"type":"String",
					"title":"p3ptype",
					"value":"",
					"description":"A P3P data element indicating the specific kind of data collected here",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}
			]
		},
		{
			"type": "node",
			"id":"Secret",
			"title":"Secret",
			"groups":["Controls"],
			"description":"A Secret Input Control.",
			"view":"node.secret.svg",
			"icon":"new_secret.png",
			"roles": [
				"core_form_controls"
			],
			"layout":function(shape) {	
				var labels = shape.getChildNodes(false).findAll(function(node) {
					return (node.getStencil().id() === "http://b3mn.org/stencilset/xforms#Label");
				});
				
				if(labels.length > 0) {
					labels.each(function(label) {
						var ul = label.bounds.upperLeft();
						var lr = label.bounds.lowerRight();
						ul.y = - label.bounds.height() - 1;
						lr.y = - 1;
						ul.x = 0;
						lr.x = label.bounds.width();;
						label.bounds.set(ul, lr);
					});
				}
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"inputmode",
					"type":"String",
					"title":"inputmode",
					"value":"",
					"description":"Hint to the user agent to select an appropriate input mode for the text input",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"navindex",
					"type":"Integer",
					"title":"navindex",
					"value":0,
					"description":"Integer used to define the navigation sequence",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"accesskey",
					"type":"String",
					"title":"accesskey",
					"value":"",
					"description":"Shortcut for moving the input focus to this control",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"1"
				},
				{
					"id":"type",
					"type":"String",
					"title":"type",
					"value":"",
					"description":"Any xsd:QName representing the expected datatype",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"readonly",
					"type":"String",
					"title":"readonly",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"required",
					"type":"String",
					"title":"required",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"calculate",
					"type":"String",
					"title":"calculate",
					"value":"",
					"description":"An expression used to calculate a string value for the associated instance data node",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"constraint",
					"type":"String",
					"title":"constraint",
					"value":"",
					"description":"A predicate that needs to be satisfied for the associated instance data node to be considered valid",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"p3ptype",
					"type":"String",
					"title":"p3ptype",
					"value":"",
					"description":"A P3P data element indicating the specific kind of data collected here",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}	
			]
		},
		{
			"type": "node",
			"id":"Textarea",
			"title":"Textarea",
			"groups":["Controls"],
			"description":"A Textarea Control.",
			"view":"node.textarea.svg",
			"icon":"new_textarea.png",
			"roles": [
				"core_form_controls"
			],
			"layout":function(shape) {	
				var labels = shape.getChildNodes(false).findAll(function(node) {
					return (node.getStencil().id() === "http://b3mn.org/stencilset/xforms#Label");
				});
				
				if(labels.length > 0) {
					labels.each(function(label) {
						var ul = label.bounds.upperLeft();
						var lr = label.bounds.lowerRight();
						ul.y = - label.bounds.height() - 1;
						lr.y = - 1;
						ul.x = 0;
						lr.x = label.bounds.width();;
						label.bounds.set(ul, lr);
					});
				}
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"inputmode",
					"type":"String",
					"title":"inputmode",
					"value":"",
					"description":"Hint to the user agent to select an appropriate input mode for the text input",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"navindex",
					"type":"Integer",
					"title":"navindex",
					"value":0,
					"description":"Integer used to define the navigation sequence",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"min":"0"
				},
				{
					"id":"accesskey",
					"type":"String",
					"title":"accesskey",
					"value":"",
					"description":"Shortcut for moving the input focus to this control",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"1"
				},
				{
					"id":"type",
					"type":"String",
					"title":"type",
					"value":"",
					"description":"Any xsd:QName representing the expected datatype",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"readonly",
					"type":"String",
					"title":"readonly",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"required",
					"type":"String",
					"title":"required",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"calculate",
					"type":"String",
					"title":"calculate",
					"value":"",
					"description":"An expression used to calculate a string value for the associated instance data node",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"constraint",
					"type":"String",
					"title":"constraint",
					"value":"",
					"description":"A predicate that needs to be satisfied for the associated instance data node to be considered valid",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"p3ptype",
					"type":"String",
					"title":"p3ptype",
					"value":"",
					"description":"A P3P data element indicating the specific kind of data collected here",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}	
			]
		},
		{
			"type": "node",
			"id":"Output",
			"title":"Output",
			"groups":["Controls"],
			"description":"Renders content but provides no means for editing data",
			"view":"node.output.svg",
			"icon":"new_output.png",
			"roles": [
				"core_form_controls"
			],
			"layout":function(shape) {	
				var labels = shape.getChildNodes(false).findAll(function(node) {
					return (node.getStencil().id() === "http://b3mn.org/stencilset/xforms#Label");
				});
				
				if(labels.length > 0) {
					labels.each(function(label) {
						var ul = label.bounds.upperLeft();
						var lr = label.bounds.lowerRight();
						ul.y = - label.bounds.height();
						lr.y = 0;
						ul.x = 0;
						lr.x = label.bounds.width();;
						label.bounds.set(ul, lr);
					});
				}
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"outputref",
					"length":"50"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"calculate",
					"type":"String",
					"title":"calculate",
					"value":"",
					"description":"An expression used to calculate a string value for the associated instance data node",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}
			]
		},
		{
			"type": "node",
			"id":"Trigger",
			"title":"Trigger",
			"groups":["Controls"],
			"description":"Renders a button",
			"view":"node.trigger.svg",
			"icon":"new_trigger.png",
			"roles": [
				"core_form_controls"
			],
			"layout":function(shape) {	
				var labels = shape.getChildNodes(false).findAll(function(node) {
					return (node.getStencil().id() === "http://b3mn.org/stencilset/xforms#Label");
				});
				
				if(labels.length > 0) {
					labels.each(function(label) {
						
						var ul = label.bounds.upperLeft();
						var lr = label.bounds.lowerRight();
						ul.y = 2;
						lr.y = 2 + label.bounds.height();
						
						if((shape.bounds.width()-4)<label.bounds.width()) {
							var sul = shape.bounds.upperLeft();
							var slr = shape.bounds.lowerRight();
							slr.x = sul.x + label.bounds.width() + 4;
							shape.bounds.set(sul, slr);
						}

						ul.x = (shape.bounds.width() - 4 - label.bounds.width()) * 0.5;
						lr.x = ul.x + label.bounds.width();
						label.bounds.set(ul, lr);
					});
				}
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"readonly",
					"type":"String",
					"title":"readonly",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"calculate",
					"type":"String",
					"title":"calculate",
					"value":"",
					"description":"An expression used to calculate a string value for the associated instance data node",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}		
			]
		},
		{
			"type": "node",
			"id":"Submit",
			"title":"Submit",
			"groups":["Controls"],
			"description":"Renders a submit button",
			"view":"node.submit.svg",
			"icon":"new_submit.png",
			"roles": [
				"core_form_controls"
			],
			"layout":function(shape) {	
				var labels = shape.getChildNodes(false).findAll(function(node) {
					return (node.getStencil().id() === "http://b3mn.org/stencilset/xforms#Label");
				});
				
				if(labels.length > 0) {
					labels.each(function(label) {
						
						var ul = label.bounds.upperLeft();
						var lr = label.bounds.lowerRight();
						ul.y = 2;
						lr.y = 2 + label.bounds.height();
						
						if((shape.bounds.width()-4)<label.bounds.width()) {
							var sul = shape.bounds.upperLeft();
							var slr = shape.bounds.lowerRight();
							slr.x = sul.x + label.bounds.width() + 4;
							shape.bounds.set(sul, slr);
						}

						ul.x = (shape.bounds.width() - 4 - label.bounds.width()) * 0.5;
						lr.x = ul.x + label.bounds.width();
						label.bounds.set(ul, lr);
					});
				}
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"readonly",
					"type":"String",
					"title":"readonly",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"calculate",
					"type":"String",
					"title":"calculate",
					"value":"",
					"description":"An expression used to calculate a string value for the associated instance data node",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}
			]
		},
		{
			"type": "node",
			"id":"Group",
			"title":"Group",
			"groups":["Containers"],
			"description":"A Container for defining a hierarchy of form controls.",
			"view":"node.group.svg",
			"icon":"new_group.png",
			"roles": [
				"container_form_controls",
				"ui_common_container",
				"labeled"
			],
			"layout":function(shape) {
				var raiseEvent = shape._delegateEvent.bind(shape);
				raiseEvent({type:'layout.rows',shape:shape,marginTop:30,marginLeft:10,spacingX:30,spacingY:30,exclude:["http://b3mn.org/stencilset/xforms#Label"]});
 				
 				var labels = shape.getChildNodes(false).findAll(function(node) {
					return (node.getStencil().id() === "http://b3mn.org/stencilset/xforms#Label");
				});
				
				if(labels.length > 0) {
					labels.each(function(label) {
						var ul = label.bounds.upperLeft();
						var lr = label.bounds.lowerRight();
						ul.y = - label.bounds.height() - 1;
						lr.y = - 1;
						ul.x = 0;
						lr.x = label.bounds.width();;
						label.bounds.set(ul, lr);
					});
				}
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"readonly",
					"type":"String",
					"title":"readonly",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				},
				{
					"id":"calculate",
					"type":"String",
					"title":"calculate",
					"value":"",
					"description":"An expression used to calculate a string value for the associated instance data node",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}
			]
		},
		{
			"type": "node",
			"id":"Repeat",
			"title":"Repeat",
			"groups":["Containers"],
			"description":"A UI mapping over a node-set.",
			"view":"node.repeat.svg",
			"icon":"new_repeat.png",
			"roles": [
				"container_form_controls",
				"actions_container"
			],
			"layout":function(shape) {
				var raiseEvent = shape._delegateEvent.bind(shape);
				raiseEvent({type:'layout.rows',shape:shape,marginTop:30,marginLeft:10,spacingX:30,spacingY:30});
 			},
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"nodeset",
					"type":"String",
					"title":"nodeset",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"200"
				}	
			]
		},
		{
			"type": "node",
			"id":"Label",
			"title":"Label",
			"groups":["Support Elements"],
			"description":"A Label for form controls.",
			"view":"node.label.svg",
			"icon":"new_label.png",
			"roles": [
				"label"
			],
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"text",
					"type":"String",
					"title":"text",
					"value":"Label",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"labeltext",
					"length":"100",
					"wrapLines":true
				}
			]
		},
		{
			"type": "node",
			"id":"Help",
			"title":"Help",
			"groups":["Support Elements"],
			"description":"Help information for form controls.",
			"view":"node.help.svg",
			"icon":"new_help.png",
			"roles": [
				"ui_common"
			],
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"message",
					"type":"String",
					"title":"message",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}
			]
		},
		{
			"type": "node",
			"id":"Hint",
			"title":"Hint",
			"groups":["Support Elements"],
			"description":"Hint information for form controls.",
			"view":"node.hint.svg",
			"icon":"new_hint.png",
			"roles": [
				"ui_common"
			],
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"message",
					"type":"String",
					"title":"message",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}
			]
		},
		{
			"type": "node",
			"id":"Alert",
			"title":"Alert",
			"groups":["Support Elements"],
			"description":"Error alert for form controls.",
			"view":"node.alert.svg",
			"icon":"new_alert.png",
			"roles": [
				"ui_common"
			],
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"message",
					"type":"String",
					"title":"message",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":true,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"relevant",
					"type":"String",
					"title":"relevant",
					"value":"",
					"description":"Any expression that is convertible to XPath boolean",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"100"
				}
			]
		},
		{
			"type": "node",
			"id":"Action",
			"title":"Action",
			"groups":["Actions"],
			"description":"Causes its child actions to be invoked in the order that they are specified.",
			"view":"node.action.svg",
			"icon":"new_action.png",
			"roles": [
				"actions_container",
				"action"
			],
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"if",
					"type":"String",
					"title":"if",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"while",
					"type":"String",
					"title":"while",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"event",
					"type":"String",
					"title":"event",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				}		
			],
			"layout":function(shape) {		
				var actions = shape.getChildNodes(false);

				if(actions.length > 0) {
					
					actions = actions.sortBy(function(action) {
						return action.bounds.upperLeft().y;
					});
					
					var shapeHeight = 5;
					actions.each(function(action) {
						var ul = action.bounds.upperLeft();
						var lr = action.bounds.lowerRight();
						ul.y = shapeHeight;
						lr.y = ul.y + action.bounds.height();
						shapeHeight += action.bounds.height() + 5;
						ul.x = 2;
						lr.x = 2 + action.bounds.width();
						action.bounds.set(ul, lr);
					});
					
					var upl = shape.bounds.upperLeft();
					var lor = shape.bounds.lowerRight();
					shape.bounds.set(upl.x, upl.y, lor.x, upl.y + shapeHeight + 15);
				}
 			}
		},
		{
			"type": "node",
			"id":"SetValue",
			"title":"Set Value",
			"groups":["Actions"],
			"description":"This action explicitly sets the value of the specified instance data node.",
			"view":"node.setvalue.svg",
			"icon":"new_setvalue.png",
			"roles": [
				"action"
			],
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"if",
					"type":"String",
					"title":"if",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"while",
					"type":"String",
					"title":"while",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"event",
					"type":"String",
					"title":"event",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"ref",
					"type":"String",
					"title":"ref",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"value",
					"type":"String",
					"title":"value",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"100"
				}
			]
		},
		{
			"type": "node",
			"id":"Insert",
			"title":"Insert",
			"groups":["Actions"],
			"description":"This action is used to create one or more nodes of instance data by cloning one or more existing instance nodes.",
			"view":"node.insert.svg",
			"icon":"new_insert.png",
			"roles": [
				"action"
			],
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"if",
					"type":"String",
					"title":"if",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"while",
					"type":"String",
					"title":"while",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"event",
					"type":"String",
					"title":"event",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"context",
					"type":"String",
					"title":"context",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"nodeset",
					"type":"String",
					"title":"nodeset",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"at",
					"type":"String",
					"title":"at",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				},
				{
					"id":"origin",
					"type":"String",
					"title":"origin",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":true,
					"refToView":"",
					"length":"50"
				}
			]
		},
		{
			"type": "node",
			"id":"Reset",
			"title":"Reset",
			"groups":["Actions"],
			"description":"This action is used to reset the instance data.",
			"view":"node.reset.svg",
			"icon":"new_reset.png",
			"roles": [
				"action"
			],
			"properties": [
				{
					"id":"id",
					"type":"String",
					"title":"id",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"30"
				},
				{
					"id":"if",
					"type":"String",
					"title":"if",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"while",
					"type":"String",
					"title":"while",
					"value":"/",
					"description":"",
					"readonly":false,
					"optional":false,
					"length":"100",
					"wrapLines":true
				},
				{
					"id":"event",
					"type":"String",
					"title":"event",
					"value":"",
					"description":"",
					"readonly":false,
					"optional":false,
					"refToView":"",
					"length":"50"
				}
			]
		}
	],	
	"rules": {
		"containmentRules": [
			{
				"role":"form",
				"contains": [
					"core_form_controls",
					"container_form_controls"
				]
			},
			{
				"role":"container_form_controls",
				"contains": [
					"core_form_controls",
					"container_form_controls"
				]
			},
			{
				"role":"core_form_controls",
				"contains": [
					"label",
					"ui_common",
					"action"
				]
			},
			{
				"role":"labeled",
				"contains": [
					"label"
				]
			},
			{
				"role":"ui_common_container",
				"contains": [
					"ui_common"
				]
			},
			{
				"role":"actions_container",
				"contains": [
					"action"
				]
			}
		]
	}
}
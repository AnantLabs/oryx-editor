/** * Copyright (c) 2006 * Martin Czuchra, Nicolas Peters, Daniel Polak, Willi Tscheschner * * Permission is hereby granted, free of charge, to any person obtaining a * copy of this software and associated documentation files (the "Software"), * to deal in the Software without restriction, including without limitation * the rights to use, copy, modify, merge, publish, distribute, sublicense, * and/or sell copies of the Software, and to permit persons to whom the * Software is furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER * DEALINGS IN THE SOFTWARE. **/if(!ORYX.Plugins)	ORYX.Plugins = new Object();ORYX.Plugins.File = Clazz.extend({	facade: undefined,	construct: function(facade) {		this.facade = facade;		this.facade.offer({			'name':"Save",			'functionality': this.save.bind(this),			'group': "File",			'icon': ORYX.PATH + "images/disk.png",			'description': "Save",			'index': 1,			'minShape': 0,			'maxShape': 0});		this.facade.offer({			'name':"Print",			'functionality': this.print.bind(this),			'group': "File",			'icon': ORYX.PATH + "images/printer.png",			'description': "Print current modell",			'index': 2,			'minShape': 0,			'maxShape': 0});						this.facade.offer({			'name':"Info",			'functionality': this.info.bind(this),			'group': "File",			'icon': ORYX.PATH + "images/information.png",			'description': "Info",			'index': 3,			'minShape': 0,			'maxShape': 0});		},	save: function() {				this.facade.raiseEvent({type:'loading.enable'});				window.setTimeout(function(){							var resource = location.search.split("resource=");								if(resource.length == 1){					// SAVE the DOM with ARESS-SERVER					DataManager.__syncglobal(this.facade);								} else {					// SAVE the DOM with ORYX-SERVER					resource = resource[1].split("&")[0];										// Get the serialized dom			   		var serializedDOM = DataManager.__persistDOM(this.facade);		      			   		// Send the request to the server.			   		new Ajax.Request(location.href, 			   						 	{											method:'POST', 			   								parameters:{ resource: resource, data: serializedDOM }			   							});																		}								this.facade.raiseEvent({type:'loading.disable'});		}.bind(this), 10);								return true;	},	info: function() {		//TODO Make this fit in 80 columns.		var info = "Copyright (c) 2006\n"										+			"Martin Czuchra, Nicolas Peters, Daniel Polak, Willi Tscheschner\n\n"	+			"Permission is hereby granted, free of charge, to any person "			+			"obtaining a copy of this software and associated documentation files "	+			"(the Software), to deal in the Software without restriction, "			+			"including without limitation the rights to use, copy, modify, merge, "	+			"publish, distribute, sublicense, and/or sell copies of the Software, "	+			"and to permit persons to whom the Software is furnished to do so, "	+			"subject to the following conditions:\n\n"								+			"The above copyright notice and this permission notice shall be "		+			"included in all copies or substantial portions of the Software.\n\n"	+			"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, "	+			"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF "	+			"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND "				+			"NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS "	+			"BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN "	+			"ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN "	+			"CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE "		+			"SOFTWARE.";		alert(info);		return false;	},		print: function() {		// Set all options for the new window		var option = $H({						width:		300,						height:		400,						toolbar:	"no",						status:		"no",						menubar:	"yes",						dependent:	"yes",						resizable:	"yes",						scrollbars:	"yes"					});				// Create the new window with all the settings		var newWindow = window.open("", "PrintWindow", option.invoke('join', '=').join(','));				// Add a style tag to the head and hide all controls		var head = newWindow.document.getElementsByTagName('head')[0];		var style = document.createElement("style");		style.innerHTML = " body {padding:0px; margin:0px} .svgcontainer { display:none; }";		head.appendChild(style);					// Clone the svg-node and append this to the new body		newWindow.document.getElementsByTagName('body')[0].appendChild(this.facade.getCanvas().getRootNode().cloneNode(true));						var svg = newWindow.document.getElementsByTagName('body')[0].getElementsByTagName('svg')[0]				// Set the width and height		svg.setAttributeNS(null, 'width', 1100);		svg.setAttributeNS(null, 'height', 1400);				// Set the correct size and rotation		svg.lastChild.setAttributeNS(null, 'transform', 'scale(0.47, 0.47) rotate(270, 1510, 1470)')						var markers = ['marker-start', 'marker-mid', 'marker-end']		var path = $A(newWindow.document.getElementsByTagName('path'));		path.each(function(pathNode){				markers.each(function(marker){						// Get the marker value						var url = pathNode.getAttributeNS(null, marker);						if(!url) { return };												// Replace the URL and set them new						url = "url(about:blank#" + url.slice(5);						pathNode.setAttributeNS(null, marker, url);			  				});					});						// Get the print dialog		newWindow.print();				return true;	}});
<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://purl.org/NET/erdf/profile">
  <title>script.aculo.us Unit test file</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <script src="../lib/prototype-1.5.1_rc3.js" type="text/javascript"></script>
  <script src="../lib/scriptaculous.js" type="text/javascript"></script>
  <script src="../lib/unittest.js" type="text/javascript"></script>
  <script src="../lib/log4js.js" type="text/javascript"></script>
  <script src="../shared/kickstart.js" type="text/javascript"></script>
  <script src="../shared/erdfparser.js" type="text/javascript"></script>
  <script src="../shared/datamanager.js" type="text/javascript"></script>
  <link rel="stylesheet" href="test.css" type="text/css" />
  <link rel="schema.b3mn" href="http://b3mn.org" />
</head>
<body>
	<h1>script.aculo.us Unit test file</h1>
	<p>
	  Tests for datamanager.js
	</p>
	<div id="testlog"></div>
	
    <!-- Activity -->
    <div id="4ad8c3f5e2b4320786560b5f3c656cd4-2" class="-b3mn-activity">
        <a rel="edit" href="http://b3mn.org/feedName/diagram/1/version/1" />
        <a rel="self" href="http://b3mn.org/feedName/diagram/1/version/1" />

        <a rel="oryx-incoming" href="#4ad8c3f5e2b4320786560b5f3c656cd4-26" />

        <span class="oryx-stencilset">http://b3mn.org/2007/b3mn/</span>
        <span class="oryx-type">Task</span>
        <span class="oryx-bounds">100,200,200,280</span>

        <div class="aress-content">
            bla
        </div>
    </div>
	
	<div id="dummy" />

	<script type="text/javascript" language="javascript" charset="utf-8">
		Test.context('DataManager',{
			
			setup : function() {
			},

			'should deliver the subject on given object and predicate' : function() {
				var count = 0;
				with(DataManager)
					predicate('rdf:type').object('b3mn:activity').each(function(subject){					
						subject.id.shouldEqual("4ad8c3f5e2b4320786560b5f3c656cd4-2");
						count++;
					});
				count.shouldEqual(1);
			},
			
			'should deliver the predicate on given subject and object' : function() {
				var count = 0;
				with(DataManager)
					subject('#4ad8c3f5e2b4320786560b5f3c656cd4-2').object('b3mn:activity').each(function(predicate){					
						predicate.shouldEqual('rdf:type');
						count++;
					});
				count.shouldEqual(1);
			},
			
			'should deliver the object on given subject and predicate' : function() {
				var count = 0;
				with(DataManager)
					subject('#4ad8c3f5e2b4320786560b5f3c656cd4-2').predicate('rdf:type').each(function(object){					
						object.shouldEqual('b3mn:activity');
						count++;
					});
				count.shouldEqual(1);
			},
			
			'should deliver the subject and object on given predicate' : function() {
				with(DataManager)
					predicate('rdf:type').each(function(triple){					
						triple.subject.id.shouldEqual("4ad8c3f5e2b4320786560b5f3c656cd4-2");
						triple.object.shouldEqual('b3mn:activity');
					});
			},
			
			'should deliver the subject and predicate on given object' : function() {
				with(DataManager)
					object('b3mn:activity').each(function(triple){					
						triple.subject.id.shouldEqual("4ad8c3f5e2b4320786560b5f3c656cd4-2");
						triple.predicate.shouldEqual('rdf:type');
					});
			},
			
			'should deliver the subject on given object and predicate' : function() {
				with(DataManager)
					subject("#4ad8c3f5e2b4320786560b5f3c656cd4-2").each(function(triple){		
						triple.predicate.shouldEqual('rdf:type');
						triple.object.shouldEqual('b3mn:activity');
					});
			},
			
			'should deliver all triples' : function() {
				var count = 0;
				with(DataManager)
					all().each(function(triple){
						count++;				
					});
				count.shouldEqual(8);
			},
						
			'should remove triples on removeTriples': function(){
				with(DataManager)
					predicate('rdf:type').object('b3mn:activity').remove();
				$('4ad8c3f5e2b4320786560b5f3c656cd4-2').shouldBeNull();
			},
			
			'should add triples on addTriple': function(){
				with(DataManager)
					subject('#abc').predicate('rdf:type').object('b3mn:activity').add();
				// can null.shouldNotBeNull pass?
				$('abc').shouldNotBeNull();				
			},
			
			'should not add incomplete triples on addTriple': function(){
				try {
					with(DataManager)
						subject('#def').object('b3mn:activity').add();
					fail();
				} catch(e) {
					// can null.shouldBeNull pass?
					$('def').shouldBeNull();	
				}			
			}
		});
	</script>
</body>
</html>
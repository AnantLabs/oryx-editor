<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head profile="http://purl.org/NET/erdf/profile">
  <title>DataManager BDD Unit Tests.</title>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <script src="../lib/prototype-1.5.1_rc3.js" type="text/javascript"></script>
  <script src="../lib/scriptaculous.js" type="text/javascript"></script>
  <script src="../lib/unittest.js" type="text/javascript"></script>
  <script src="../lib/log4js.js" type="text/javascript"></script>
  <script src="../shared/kickstart.js" type="text/javascript"></script>
  <script src="../shared/erdfparser.js" type="text/javascript"></script>
  <script src="../shared/datamanager.js" type="text/javascript"></script>
  
  <link rel="stylesheet" href="test.css" type="text/css" />
  
  <link rel="schema.process" href="http://b3mn.org/" />
  <link rel="schema.oryx" href="http://oryx-editor.org/" />
  <link rel="schema.aress" href="http://aress.org/" />
</head>
<body>
	<h1>DataManager BDD Unit Tests.</h1>
	<p>
	  Tests for the DataManager. This File contains BDD specs for the
	  DataManager and its functionality regarding basic triple operations, such
	  as grafting DOM, querying for triples, adding/modifying/removing them.
	</p>
	<div id="testlog"></div>
	
    <!-- Activity -->
    <div id="4ad8c3f5e2b4320786560b5f3c656cd4-2" class="-process-activity">
        <a rel="edit" href="http://b3mn.org/feedName/diagram/1/version/1" />
        <a rel="self" href="http://b3mn.org/feedName/diagram/1/version/1" />

        <a rel="oryx-incoming" href="#4ad8c3f5e2b4320786560b5f3c656cd4-26" />

        <span class="oryx-stencilset">http://b3mn.org/2007/b3mn/</span>
        <span class="oryx-type">Task</span>
        <span class="oryx-bounds">100,200,200,280</span>

        <div class="aress-content">
            bla
        </div>
    </div>
	
	<div id="dummy" />
	
	<div id="removablediv">
		<span class="oryx-test">removabletext</span>
		<a rel="oryx-test" href='#x'>removablelink</span>
	</div>

	<script type="text/javascript" language="javascript" charset="utf-8">
		Test.context('DataManager Base Functionality',{
			
			setup : function() {
			},

			'should be able to query exactly 11 triples' : function() {
				
				// get all activities from this page
				var resultSet = DataManager.query(
						undefined,
						undefined,
						undefined);
				alert(resultSet.length);
				// assert there is exactly one.
				assertEqual(resultSet.length, 11, 'There are not as much triples in this file as there should be.');
			},
			
			'should be able to add triples (literal objects)' : function() {

				// construct a new triple.
				var triple = new ERDF.Triple(
					new ERDF.Resource('#4ad8c3f5e2b4320786560b5f3c656cd4-2'),
					{prefix: 'process', name: 'info'},
					new ERDF.Literal('Some process information.')
				);
				
				// query that triple.
				var resultSet = DataManager.query(
						{type: ERDF.RESOURCE, value: triple.subject.value},
						{prefix: 'process', name: 'info'},
						triple.object);

				// assert there is none.
				assertEqual(0, resultSet.length,
					"The query actually was queryable before addition.");

				// add it trough the data manager.
				DataManager.addTriple(triple);
				
				// query that triple.
				var resultSet = DataManager.query(
						{type: ERDF.RESOURCE, value: triple.subject.value},
						{prefix: 'process', name: 'info'},
						triple.object);

				// assert it's there once.
				assertEqual(1, resultSet.length,
					"The query actually was not queryable after addition.");
			},
			
			'should be able to add triples (resource objects)' : function() {

				// construct a new triple.
				var triple = new ERDF.Triple(
					new ERDF.Resource('#4ad8c3f5e2b4320786560b5f3c656cd4-2'),
						{prefix: 'process', name: 'info'},
					new ERDF.Resource('#sdflkj')
				);
				
				// query that triple.
				var resultSet = DataManager.query(
						{type: ERDF.RESOURCE, value: triple.subject.value},
						{prefix: 'process', name: 'info'},
						triple.object);

				// assert there is none.
				assertEqual(0, resultSet.length,
					"The query actually was queryable before addition.");

				// add it trough the data manager.
				DataManager.addTriple(triple);
				
				// query that triple.
				var resultSet = DataManager.query(
						{type: ERDF.RESOURCE, value: triple.subject.value},
						{prefix: 'process', name: 'info'},
						triple.object);

				// assert it's there once.
				assertEqual(1, resultSet.length,
					"The query actually was not queryable after addition.");
			},
			
			'should be able to remove triples (literal objects)' : function() {
				
				// construct a new triple.
				var triple = new ERDF.Triple(
					{type: ERDF.RESOURCE, value: '#removablediv'},
					{prefix: 'oryx', name: 'test'},
					{type: ERDF.LITERAL, value: 'removabletext'});

				// query that triple.
				var resultSet = DataManager.query(
					{type: ERDF.RESOURCE, value: '#removablediv'},
					{prefix: 'oryx', name: 'test'},
					{type: ERDF.LITERAL, value: 'removabletext'});

				// assert there is one.
				assertEqual(1, resultSet.length,
					"The triple that should be removed actually does not exist before removal.");
					
				DataManager.removeTriple(triple);
				
				// query that triple.
				var resultSet = DataManager.query(
					{type: ERDF.RESOURCE, value: '#removablediv'},
					{prefix: 'oryx', name: 'test'},
					{type: ERDF.LITERAL, value: 'removabletext'});

				// assert there is one.
				assertEqual(0, resultSet.length,
					"The triple that should be removed actually continued existing after removal.");
			},
			
			'should be able to remove triples (resource objects)' : function() {

			}
		});
	</script>
</body>
</html>